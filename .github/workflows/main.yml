# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        browsers: ["chrome","firefox","edge"]
    steps:
    - uses: browser-actions/setup-chrome@latest
    - run: chrome --version

    - uses: browser-actions/setup-geckodriver@latest
    - run: geckodriver --version

    - uses: browser-actions/setup-edge@latest
    - name: Print Edge version
      run: (Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion

    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'zulu'
    - name: Build with Gradle
      env:
        browserName: ${{matrix.browsers}}
        sauceuser: ${{secrets.SAUCEUSER}}
        saucekey: ${{secrets.SAUCEKEY}}
        sauceUrl: ${{secrets.SAUCEURL}}
        isLocal: "false"
      run: ./gradlew test --info # Run our tests using Gradle
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Tests            # Name of the check run which will be created
        path: AutomationReport/GoogleSearchTest/*.xml    # Path to test results
        reporter: java-junit